{"ast":null,"code":"var _jsxFileName = \"D:\\\\startup - Copy\\\\src\\\\components\\\\user\\\\userinfo\\\\UserInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport NavBar from '../navbar/NabBar';\nimport Head from '../../common/header/Head';\nimport Footer from '../../common/footer/Footer';\nimport './userinfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = () => {\n  _s();\n\n  const initialUserInfo = {\n    name: 'John Doe',\n    dateOfBirth: '01/01/1990',\n    gender: 'Male',\n    phoneNumber: '123-456-7890',\n    email: 'johndoe@example.com',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n  }; // Create state variables for user information and modification status\n\n  const [userInfo, setUserInfo] = useState(initialUserInfo);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleInputChange = (e, field) => {\n    // Update the corresponding field in the user information state immediately\n    setUserInfo({ ...userInfo,\n      [field]: e.target.value\n    });\n  };\n\n  const handleUpdate = e => {\n    e.preventDefault(); // Implement your logic to update user information here\n    // You can send a request to your server or update the state\n    // For now, we'll just toggle the editing state\n\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdate,\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: userInfo.name,\n                readOnly: !isEditing,\n                onChange: e => handleInputChange(e, 'name')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsEditing(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserInfo, \"iS7SRPF9gLiRvkTYu7VPztfMhfM=\");\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","NavBar","Head","Footer","UserInfo","initialUserInfo","name","dateOfBirth","gender","phoneNumber","email","description","userInfo","setUserInfo","isEditing","setIsEditing","handleInputChange","e","field","target","value","handleUpdate","preventDefault"],"sources":["D:/startup - Copy/src/components/user/userinfo/UserInfo.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport NavBar from '../navbar/NabBar';\r\nimport Head from '../../common/header/Head';\r\nimport Footer from '../../common/footer/Footer';\r\nimport './userinfo.css';\r\n\r\nconst UserInfo = () => {\r\n  const initialUserInfo = {\r\n    name: 'John Doe',\r\n    dateOfBirth: '01/01/1990',\r\n    gender: 'Male',\r\n    phoneNumber: '123-456-7890',\r\n    email: 'johndoe@example.com',\r\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\r\n  };\r\n\r\n// Create state variables for user information and modification status\r\nconst [userInfo, setUserInfo] = useState(initialUserInfo);\r\nconst [isEditing, setIsEditing] = useState(false);\r\n\r\nconst handleInputChange = (e, field) => {\r\n  // Update the corresponding field in the user information state immediately\r\n  setUserInfo({\r\n    ...userInfo,\r\n    [field]: e.target.value,\r\n  });\r\n};\r\n\r\nconst handleUpdate = (e) => {\r\n  e.preventDefault();\r\n  // Implement your logic to update user information here\r\n  // You can send a request to your server or update the state\r\n  // For now, we'll just toggle the editing state\r\n  setIsEditing(false);\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <Head />\r\n    <NavBar />\r\n\r\n    <div className=\"user-info-container\">\r\n      <div className=\"user-info-column\">\r\n        <h2>User Information</h2>\r\n        <form onSubmit={handleUpdate}>\r\n          <ul>\r\n            <li>\r\n              <strong>Name:</strong>\r\n              <input\r\n                type=\"text\"\r\n                value={userInfo.name}\r\n                readOnly={!isEditing}\r\n                onChange={(e) => handleInputChange(e, 'name')}\r\n              />\r\n            </li>\r\n            {/* Add similar fields for Date of Birth, Gender, etc. */}\r\n          </ul>\r\n          {isEditing ? (\r\n            <button type=\"submit\">Save</button>\r\n          ) : (\r\n            <button onClick={() => setIsEditing(true)}>Edit</button>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"user-actions\">\r\n      <button>Change Password</button>\r\n    </div>\r\n\r\n    <Footer />\r\n  </>\r\n);\r\n};\r\n\r\nexport default UserInfo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,gBAAP;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,eAAe,GAAG;IACtBC,IAAI,EAAE,UADgB;IAEtBC,WAAW,EAAE,YAFS;IAGtBC,MAAM,EAAE,MAHc;IAItBC,WAAW,EAAE,cAJS;IAKtBC,KAAK,EAAE,qBALe;IAMtBC,WAAW,EAAE;EANS,CAAxB,CADqB,CAUvB;;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACK,eAAD,CAAxC;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMgB,iBAAiB,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;IACtC;IACAL,WAAW,CAAC,EACV,GAAGD,QADO;MAEV,CAACM,KAAD,GAASD,CAAC,CAACE,MAAF,CAASC;IAFR,CAAD,CAAX;EAID,CAND;;EAQA,MAAMC,YAAY,GAAIJ,CAAD,IAAO;IAC1BA,CAAC,CAACK,cAAF,GAD0B,CAE1B;IACA;IACA;;IACAP,YAAY,CAAC,KAAD,CAAZ;EACD,CAND;;EAQA,oBACE;IAAA,wBACE,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MAAK,SAAS,EAAC,qBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAM,QAAQ,EAAEM,YAAhB;UAAA,wBACE;YAAA,uBACE;cAAA,wBACE;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBACE,IAAI,EAAC,MADP;gBAEE,KAAK,EAAET,QAAQ,CAACN,IAFlB;gBAGE,QAAQ,EAAE,CAACQ,SAHb;gBAIE,QAAQ,EAAGG,CAAD,IAAOD,iBAAiB,CAACC,CAAD,EAAI,MAAJ;cAJpC;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,EAaGH,SAAS,gBACR;YAAQ,IAAI,EAAC,QAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADQ,gBAGR;YAAQ,OAAO,EAAE,MAAMC,YAAY,CAAC,IAAD,CAAnC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAhBJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF,eA6BE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA7BF,eAiCE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAjCF;EAAA,gBADF;AAqCC,CAnED;;GAAMX,Q;;KAAAA,Q;AAqEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\startup - Copy\\\\src\\\\components\\\\user\\\\userinfo\\\\UserInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport NavBar from '../navbar/NabBar';\nimport Head from '../../common/header/Head';\nimport Footer from '../../common/footer/Footer';\nimport './userinfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = () => {\n  _s();\n\n  // Sample user information, replace with actual user data\n  const initialUserInfo = {\n    name: 'John Doe',\n    dateOfBirth: '01/01/1990',\n    gender: 'Male',\n    phoneNumber: '123-456-7890',\n    email: 'johndoe@example.com',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n  }; // Create state variables for each input field\n\n  const [name, setName] = useState(initialUserInfo.name); // ...create similar state variables for other fields\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleUpdate = e => {\n    e.preventDefault(); // Implement your logic to update user information here\n    // You can send a request to your server or update the state\n    // For now, we'll just toggle the editing state\n\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdate,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: name,\n              onChange: e => setName(e.target.value) // Handle input change here\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsEditing(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info-column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserInfo, \"GD9kbiOj5WYa7BcIMngCGOQdWYY=\");\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","Head","Footer","UserInfo","initialUserInfo","name","dateOfBirth","gender","phoneNumber","email","description","setName","isEditing","setIsEditing","handleUpdate","e","preventDefault","target","value"],"sources":["D:/startup - Copy/src/components/user/userinfo/UserInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport NavBar from '../navbar/NabBar';\r\nimport Head from '../../common/header/Head';\r\nimport Footer from '../../common/footer/Footer';\r\nimport './userinfo.css';\r\n\r\nconst UserInfo = () => {\r\n  // Sample user information, replace with actual user data\r\n  const initialUserInfo = {\r\n    name: 'John Doe',\r\n    dateOfBirth: '01/01/1990',\r\n    gender: 'Male',\r\n    phoneNumber: '123-456-7890',\r\n    email: 'johndoe@example.com',\r\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\r\n  };\r\n\r\n  // Create state variables for each input field\r\n  const [name, setName] = useState(initialUserInfo.name);\r\n  // ...create similar state variables for other fields\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    // Implement your logic to update user information here\r\n    // You can send a request to your server or update the state\r\n    // For now, we'll just toggle the editing state\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Head />\r\n      <NavBar />\r\n\r\n      <div className=\"user-info-container\">\r\n        <div className=\"user-info-column\">\r\n          <h2>User Information</h2>\r\n          <form onSubmit={handleUpdate}>\r\n            <div className=\"form-group\">\r\n              <label>Name:</label>\r\n              {isEditing ? (\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)} // Handle input change here\r\n                />\r\n              ) : (\r\n                <span>{name}</span>\r\n              )}\r\n            </div>\r\n            {/* Add similar fields for Date of Birth, Gender, etc. */}\r\n            {isEditing ? (\r\n              <button type=\"submit\">Save</button>\r\n            ) : (\r\n              <button onClick={() => setIsEditing(true)}>Edit</button>\r\n            )}\r\n          </form>\r\n        </div>\r\n        <div className=\"user-info-column\">\r\n          {/* Display the user information in the second column */}\r\n          {/* You can use the same pattern as in the first column */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"user-actions\">\r\n        <button>Change Password</button>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n  "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,gBAAP;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB;EACA,MAAMC,eAAe,GAAG;IACtBC,IAAI,EAAE,UADgB;IAEtBC,WAAW,EAAE,YAFS;IAGtBC,MAAM,EAAE,MAHc;IAItBC,WAAW,EAAE,cAJS;IAKtBC,KAAK,EAAE,qBALe;IAMtBC,WAAW,EAAE;EANS,CAAxB,CAFqB,CAWrB;;EACA,MAAM,CAACL,IAAD,EAAOM,OAAP,IAAkBb,QAAQ,CAACM,eAAe,CAACC,IAAjB,CAAhC,CAZqB,CAarB;;EAEA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMgB,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF,GAD0B,CAE1B;IACA;IACA;;IACAH,YAAY,CAAC,KAAD,CAAZ;EACD,CAND;;EAQA,oBACE;IAAA,wBACE,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MAAK,SAAS,EAAC,qBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAM,QAAQ,EAAEC,YAAhB;UAAA,wBACE;YAAK,SAAS,EAAC,YAAf;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,EAEGF,SAAS,gBACR;cACE,IAAI,EAAC,MADP;cAEE,KAAK,EAAEP,IAFT;cAGE,QAAQ,EAAGU,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAH1B,CAG4C;;YAH5C;cAAA;cAAA;cAAA;YAAA,QADQ,gBAOR;cAAA,UAAOb;YAAP;cAAA;cAAA;cAAA;YAAA,QATJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,EAcGO,SAAS,gBACR;YAAQ,IAAI,EAAC,QAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADQ,gBAGR;YAAQ,OAAO,EAAE,MAAMC,YAAY,CAAC,IAAD,CAAnC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAjBJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAwBE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAxBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAkCE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAlCF,eAsCE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAtCF;EAAA,gBADF;AA0CD,CAnED;;GAAMV,Q;;KAAAA,Q;AAqEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\startup - Copy\\\\src\\\\components\\\\user\\\\userinfo\\\\UserInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport NavBar from '../navbar/NabBar';\nimport Head from '../../common/header/Head';\nimport Footer from '../../common/footer/Footer';\nimport './userinfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = () => {\n  _s();\n\n  // Sample user information, replace with actual user data\n  const initialUserInfo = {\n    name: 'John Doe',\n    dateOfBirth: '01/01/1990',\n    gender: 'Male',\n    phoneNumber: '123-456-7890',\n    email: 'johndoe@example.com',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n  }; // Create state variables for each input field\n\n  const [name, setName] = useState(initialUserInfo.name);\n  const [dateOfBirth, setDateOfBirth] = useState(initialUserInfo.dateOfBirth);\n  const [gender, setGender] = useState(initialUserInfo.gender);\n  const [phoneNumber, setPhoneNumber] = useState(initialUserInfo.phoneNumber);\n  const [email, setEmail] = useState(initialUserInfo.email);\n  const [description, setDescription] = useState(initialUserInfo.description); // ...create similar state variables for other fields\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleUpdate = e => {\n    e.preventDefault(); // Implement your logic to update user information here\n    // You can send a request to your server or update the state\n    // For now, we'll just toggle the editing state\n\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date of Birth:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: dateOfBirth,\n            onChange: e => setDateOfBirth(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: dateOfBirth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Gender:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: gender,\n            onChange: e => setGender(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserInfo, \"i1PPd3l6zOmoq0/6cMMNHbh9a6o=\");\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","Head","Footer","UserInfo","initialUserInfo","name","dateOfBirth","gender","phoneNumber","email","description","setName","setDateOfBirth","setGender","setPhoneNumber","setEmail","setDescription","isEditing","setIsEditing","handleUpdate","e","preventDefault","target","value"],"sources":["D:/startup - Copy/src/components/user/userinfo/UserInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport NavBar from '../navbar/NabBar';\r\nimport Head from '../../common/header/Head';\r\nimport Footer from '../../common/footer/Footer';\r\nimport './userinfo.css';\r\n\r\nconst UserInfo = () => {\r\n  // Sample user information, replace with actual user data\r\n  const initialUserInfo = {\r\n    name: 'John Doe',\r\n    dateOfBirth: '01/01/1990',\r\n    gender: 'Male',\r\n    phoneNumber: '123-456-7890',\r\n    email: 'johndoe@example.com',\r\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\r\n  };\r\n\r\n  // Create state variables for each input field\r\n  const [name, setName] = useState(initialUserInfo.name);\r\n  const [dateOfBirth, setDateOfBirth] = useState(initialUserInfo.dateOfBirth);\r\n  const [gender, setGender] = useState(initialUserInfo.gender);\r\n  const [phoneNumber, setPhoneNumber] = useState(initialUserInfo.phoneNumber);\r\n  const [email, setEmail] = useState(initialUserInfo.email);\r\n  const [description, setDescription] = useState(initialUserInfo.description);\r\n\r\n  // ...create similar state variables for other fields\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    // Implement your logic to update user information here\r\n    // You can send a request to your server or update the state\r\n    // For now, we'll just toggle the editing state\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Head />\r\n      <NavBar />\r\n\r\n      <div className=\"user-info-column\">\r\n        <h2>User Information</h2>\r\n        <form onSubmit={handleUpdate}>\r\n          <div className=\"form-group\">\r\n            <label>Name:</label>\r\n            {isEditing ? (\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            ) : (\r\n              <span>{name}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Date of Birth:</label>\r\n            {isEditing ? (\r\n              <input\r\n                type=\"text\"\r\n                value={dateOfBirth}\r\n                onChange={(e) => setDateOfBirth(e.target.value)}\r\n              />\r\n            ) : (\r\n              <span>{dateOfBirth}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Gender:</label>\r\n            {isEditing ? (\r\n              <input\r\n                type=\"text\"\r\n                value={gender}\r\n                onChange={(e) => setGender(e.target.value)}\r\n              />\r\n            ) : (\r\n              <span>{gender}</span>\r\n            )}\r\n          </div>\r\n          {/* Add similar fields for phoneNumber, email, description */}\r\n          {isEditing ? (\r\n            <button type=\"submit\">Save</button>\r\n          ) : (\r\n            <button onClick={() => setIsEditing(true)}>Edit</button>\r\n          )}\r\n        </form>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}